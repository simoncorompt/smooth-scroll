"use strict";function _classCallCheck(e,o){if(!(e instanceof o))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,o){for(var t=0;t<o.length;t++){var n=o[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(o,t,n){return t&&e(o.prototype,t),n&&e(o,n),o}}(),SmoothScroll=function(){function e(){_classCallCheck(this,e),this.scrollDelta=0,this.scrollDirection=1,this.scrollOffset=document.body.scrollTop,this.bindScrollEvent(),this.render()}return _createClass(e,[{key:"bindScrollEvent",value:function(){var e=this;$("body").on("mousewheel",function(o){o.preventDefault();var t=.4*o.deltaY;e.scrollDelta-=t,e.scrollDirection=t>0?-1:1})}},{key:"render",value:function(){var e=this;if(requestAnimationFrame(function(){e.render()}),this.scrollDirection<0){if(this.scrollDelta>-1)return void(this.scrollDelta=0)}else if(this.scrollDelta<1)return void(this.scrollDelta=0);TweenMax.set($("body"),{scrollTop:"+="+this.scrollDelta}),this.scrollDelta*=.9}}]),e}();window.requestAnimationFrame||(window.requestAnimationFrame=function(){return window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(e,o){window.setTimeout(e,1e3/60)}}()),"function"==typeof define&&define.amd?define("SmoothScroll",SmoothScroll):"undefined"!=typeof module&&module.exports?module.exports=SmoothScroll:window.SmoothScroll=SmoothScroll;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNtb290aFNjcm9sbC5qcyJdLCJuYW1lcyI6WyJfY2xhc3NDYWxsQ2hlY2siLCJpbnN0YW5jZSIsIkNvbnN0cnVjdG9yIiwiVHlwZUVycm9yIiwiX2NyZWF0ZUNsYXNzIiwiZGVmaW5lUHJvcGVydGllcyIsInRhcmdldCIsInByb3BzIiwiaSIsImxlbmd0aCIsImRlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImtleSIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsInByb3RvdHlwZSIsIlNtb290aFNjcm9sbCIsInRoaXMiLCJzY3JvbGxEZWx0YSIsInNjcm9sbERpcmVjdGlvbiIsInNjcm9sbE9mZnNldCIsImRvY3VtZW50IiwiYm9keSIsInNjcm9sbFRvcCIsImJpbmRTY3JvbGxFdmVudCIsInJlbmRlciIsInZhbHVlIiwiX3RoaXMiLCIkIiwib24iLCJlIiwicHJldmVudERlZmF1bHQiLCJvZmZzZXQiLCJkZWx0YVkiLCJfdGhpczIiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJUd2Vlbk1heCIsInNldCIsIndpbmRvdyIsIndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZSIsIm1velJlcXVlc3RBbmltYXRpb25GcmFtZSIsIm9SZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJtc1JlcXVlc3RBbmltYXRpb25GcmFtZSIsImNhbGxiYWNrIiwiZWxlbWVudCIsInNldFRpbWVvdXQiLCJkZWZpbmUiLCJhbWQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUlBLFNBQVNBLGlCQUFnQkMsRUFBVUMsR0FBZSxLQUFNRCxZQUFvQkMsSUFBZ0IsS0FBTSxJQUFJQyxXQUFVLHFDQUZoSCxHQUFJQyxjQUFlLFdBQWUsUUFBU0MsR0FBaUJDLEVBQVFDLEdBQVMsSUFBSyxHQUFJQyxHQUFJLEVBQUdBLEVBQUlELEVBQU1FLE9BQVFELElBQUssQ0FBRSxHQUFJRSxHQUFhSCxFQUFNQyxFQUFJRSxHQUFXQyxXQUFhRCxFQUFXQyxhQUFjLEVBQU9ELEVBQVdFLGNBQWUsRUFBVSxTQUFXRixLQUFZQSxFQUFXRyxVQUFXLEdBQU1DLE9BQU9DLGVBQWVULEVBQVFJLEVBQVdNLElBQUtOLElBQWlCLE1BQU8sVUFBVVIsRUFBYWUsRUFBWUMsR0FBaUosTUFBOUhELElBQVlaLEVBQWlCSCxFQUFZaUIsVUFBV0YsR0FBaUJDLEdBQWFiLEVBQWlCSCxFQUFhZ0IsR0FBcUJoQixNQUYzaEJrQixhQUFZLFdBRUgsUUFGVEEsS0FRRXBCLGdCQUFnQnFCLEtBUmxCRCxHQUlFQyxLQUFLQyxZQUFjLEVBQ25CRCxLQUFLRSxnQkFBa0IsRUFDdkJGLEtBQUtHLGFBQWVDLFNBQVNDLEtBQUtDLFVBQ2xDTixLQUFLTyxrQkFDTFAsS0FBS1EsU0FrRFQsTUF6Q0F6QixjQWpCRWdCLElBa0JFSixJQUFLLGtCQUNMYyxNQVJXLFdBU1AsR0FBSUMsR0FBUVYsSUFQaEJXLEdBQUUsUUFBUUMsR0FBRyxhQUFjLFNBQUNDLEdBQ3hCQSxFQUFFQyxnQkFDRixJQUFJQyxHQUFvQixHQUFYRixFQUFFRyxNQUNmTixHQUFLVCxhQUFlYyxFQUNwQkwsRUFBS1IsZ0JBQW1CYSxFQUFTLEVBQUssR0FBSyxPQWEvQ3BCLElBQUssU0FDTGMsTUFURSxXQVVFLEdBQUlRLEdBQVNqQixJQUpqQixJQUpBa0Isc0JBQXNCLFdBQ2xCRCxFQUFLVCxXQUdMUixLQUFLRSxnQkFBa0IsR0FDdkIsR0FBSUYsS0FBS0MsWUFBYyxHQUVuQixZQURBRCxLQUFLQyxZQUFjLE9BSXZCLElBQUlELEtBQUtDLFlBQWMsRUFFbkIsWUFEQUQsS0FBS0MsWUFBYyxFQUszQmtCLFVBQVNDLElBQUlULEVBQUUsU0FDWEwsVUFBVyxLQUFPTixLQUFLQyxjQUczQkQsS0FBS0MsYUFBZSxPQTVDdEJGLElBZ0REc0IsUUFBT0gsd0JBQ1JHLE9BQU9ILHNCQUF3QixXQUMzQixNQUFPRyxRQUFPQyw2QkFDVkQsT0FBT0UsMEJBQ1BGLE9BQU9HLHdCQUNQSCxPQUFPSSx5QkFDUCxTQUE4Q0MsRUFBbUNDLEdBQzdFTixPQUFPTyxXQUFXRixFQUFVLElBQU8sU0FLN0Isa0JBQVhHLFNBQXlCQSxPQUFPQyxJQUN2Q0QsT0FBTyxlQUFnQjlCLGNBQ0UsbUJBQVhnQyxTQUEwQkEsT0FBT0MsUUFDL0NELE9BQU9DLFFBQVVqQyxhQUVqQnNCLE9BQU90QixhQUFlQSIsImZpbGUiOiJzbW9vdGhTY3JvbGwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBTbW9vdGhTY3JvbGwge1xuXG4gICAgY29uc3RydWN0b3IoKXtcblxuICAgICAgICB0aGlzLnNjcm9sbERlbHRhID0gMDtcbiAgICAgICAgdGhpcy5zY3JvbGxEaXJlY3Rpb24gPSAxO1xuICAgICAgICB0aGlzLnNjcm9sbE9mZnNldCA9IGRvY3VtZW50LmJvZHkuc2Nyb2xsVG9wO1xuICAgICAgICB0aGlzLmJpbmRTY3JvbGxFdmVudCgpO1xuICAgICAgICB0aGlzLnJlbmRlcigpO1xuICAgIH1cblxuICAgIGJpbmRTY3JvbGxFdmVudCgpIHtcblxuICAgICAgICAkKCdib2R5Jykub24oJ21vdXNld2hlZWwnLCAoZSkgPT4ge1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgdmFyIG9mZnNldCA9IGUuZGVsdGFZICogMC40O1xuICAgICAgICAgICAgdGhpcy5zY3JvbGxEZWx0YSAtPSBvZmZzZXQ7XG4gICAgICAgICAgICB0aGlzLnNjcm9sbERpcmVjdGlvbiA9IChvZmZzZXQgPiAwKSA/IC0xIDogMTtcbiAgICAgICAgfSk7XG5cbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG5cbiAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMucmVuZGVyKCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmICh0aGlzLnNjcm9sbERpcmVjdGlvbiA8IDApIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnNjcm9sbERlbHRhID4gLTEpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNjcm9sbERlbHRhID0gMDtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAodGhpcy5zY3JvbGxEZWx0YSA8IDEpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNjcm9sbERlbHRhID0gMDtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBUd2Vlbk1heC5zZXQoJCgnYm9keScpLCB7XG4gICAgICAgICAgICBzY3JvbGxUb3A6IFwiKz1cIiArIHRoaXMuc2Nyb2xsRGVsdGFcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy5zY3JvbGxEZWx0YSAqPSAwLjk7XG4gICAgfVxufVxuXG5pZiAoIXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUpIHtcbiAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lID0gKGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gd2luZG93LndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZSB8fFxuICAgICAgICAgICAgd2luZG93Lm1velJlcXVlc3RBbmltYXRpb25GcmFtZSB8fCAvLyBjb21tZW50IG91dCBpZiBGRjQgaXMgc2xvdyAoaXQgY2FwcyBmcmFtZXJhdGUgYXQgfjMwZnBzOiBodHRwczovL2J1Z3ppbGxhLm1vemlsbGEub3JnL3Nob3dfYnVnLmNnaT9pZD02MzAxMjcpXG4gICAgICAgICAgICB3aW5kb3cub1JlcXVlc3RBbmltYXRpb25GcmFtZSB8fFxuICAgICAgICAgICAgd2luZG93Lm1zUmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiggLyogZnVuY3Rpb24gRnJhbWVSZXF1ZXN0Q2FsbGJhY2sgKi8gY2FsbGJhY2ssIC8qIERPTUVsZW1lbnQgRWxlbWVudCAqLyBlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgd2luZG93LnNldFRpbWVvdXQoY2FsbGJhY2ssIDEwMDAgLyA2MCk7XG4gICAgICAgICAgICB9O1xuICAgIH0pKCk7XG59XG5cbmlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgICBkZWZpbmUoJ1Ntb290aFNjcm9sbCcsIFNtb290aFNjcm9sbCk7XG59IGVsc2UgaWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzKSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBTbW9vdGhTY3JvbGw7XG59IGVsc2Uge1xuICAgIHdpbmRvdy5TbW9vdGhTY3JvbGwgPSBTbW9vdGhTY3JvbGw7XG59Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9